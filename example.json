{"tests": {"test_report.py::test_basic": {"call": {"duration": 0.0001366138458251953, "outcome": "passed", "Captured stdout call": "call str\n"}, "teardown": {"duration": 7.891654968261719e-05, "outcome": "passed"}, "setup": {"duration": 0.0003001689910888672, "outcome": "passed"}}, "test_report.py::test_xfailed_but_passing": {"call": {"duration": 0.00010561943054199219, "outcome": "xpassed", "Captured stdout call": "I am xfailed but passing\n", "xfail_reason": "testing xfail"}, "teardown": {"duration": 6.842613220214844e-05, "outcome": "passed"}, "setup": {"duration": 0.00019359588623046875, "outcome": "passed"}}, "test_report.py::test_xfailed": {"call": {"duration": 0.0002357959747314453, "longrepr": "@pytest.mark.xfail(reason='testing xfail')\n    def test_xfailed():\n        print('I am xfailed')\n>       assert 1 == 2\nE       assert 1 == 2\n\ntest_report.py:33: AssertionError", "outcome": "xfailed", "Captured stdout call": "I am xfailed\n", "xfail_reason": "testing xfail"}, "teardown": {"duration": 0.00010800361633300781, "outcome": "passed"}, "setup": {"duration": 0.0002110004425048828, "outcome": "passed"}}, "test_report.py::test_fail_during_setup": {"teardown": {"duration": 7.224082946777344e-05, "outcome": "passed"}, "setup": {"duration": 0.0003516674041748047, "longrepr": "request = <SubRequest 'fail_setup_fixture' for <Function 'test_fail_during_setup'>>\n\n    @pytest.fixture\n    def fail_setup_fixture(request):\n>       assert 1 == 3\nE       assert 1 == 3\n\ntest_report.py:13: AssertionError", "outcome": "error"}}, "test_report.py::test_fail_during_teardown": {"call": {"duration": 0.00011730194091796875, "outcome": "passed", "Captured stdout call": "I will fail during teardown\n"}, "teardown": {"duration": 0.00016260147094726562, "longrepr": "def fn():\n>       assert 1 == 3\nE       assert 1 == 3\n\ntest_report.py:18: AssertionError", "outcome": "error"}, "setup": {"duration": 0.00028133392333984375, "outcome": "passed"}}, "test_report.py::test_skipped": {"teardown": {"duration": 7.05718994140625e-05, "outcome": "passed"}, "setup": {"duration": 0.00010776519775390625, "longrepr": "('test_report.py', 47, 'Skipped: testing skip')", "outcome": "skipped"}}, "test_report.py::test_fail_with_fixture": {"call": {"duration": 0.00043129920959472656, "longrepr": "setup_teardown_fixture = None\n\n    def test_fail_with_fixture(setup_teardown_fixture):\n        print('call str 2')\n>       assert 1 == 2\nE       assert 1 == 2\n\ntest_report.py:28: AssertionError", "outcome": "failed", "Captured stdout call": "call str 2\n"}, "teardown": {"duration": 0.00011587142944335938, "Captured stdout teardown": "tearing down\n", "outcome": "passed"}, "setup": {"duration": 0.0002722740173339844, "Captured stdout setup": "setting up\n", "outcome": "passed"}}}, "created_at": "2015-12-26 15:00:21.287352", "environment": {"Platform": "Linux-3.5.0-40-generic-x86_64-with-Ubuntu-12.04-precise", "Python": "3.5.1"}, "summary": {"duration": 0.0315709114074707, "failed": 1, "xfailed": 1, "skipped": 1, "passed": 2, "xpassed": 1, "error": 2, "num_tests": 7}}